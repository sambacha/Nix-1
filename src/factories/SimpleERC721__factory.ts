/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleERC721, SimpleERC721Interface } from "../SimpleERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600c81526b53696d706c6545524337323160a01b60208083019182528351808501909452600384526253453760e81b908401528151919291620000619160009162000080565b5080516200007790600190602084019062000080565b5050506200016d565b8280546200008e906200013c565b90600052602060002090601f016020900481019282620000b25760008555620000fd565b82601f10620000cd57805160ff1916838001178555620000fd565b82800160010185558215620000fd579182015b82811115620000fd578251825591602001919060010190620000e0565b506200010b9291506200010f565b5090565b5b808211156200010b576000815560010162000110565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806200015157607f821691505b6020821081141562000167576200016762000126565b50919050565b61143c806200017d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e157600080fd5b80636352211e1461016d57806370a082311461018057806395d89b41146101a057600080fd5b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610aae565b6101f4565b6040516100f49190610ad9565b60405180910390f35b610105610246565b6040516100f49190610b45565b610125610120366004610b67565b6102d8565b6040516100f49190610ba2565b610145610140366004610bc4565b610331565b005b610145610155366004610c01565b6103b7565b610145610168366004610c01565b6103e8565b61012561017b366004610b67565b610403565b61019361018e366004610c51565b610438565b6040516100f49190610c78565b61010561047c565b6101456101b6366004610c99565b61048b565b6101456101c9366004610dc7565b610523565b6101056101dc366004610b67565b61055b565b6100e76101ef366004610e46565b6105fb565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b8061024057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025590610e8f565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610e8f565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103155760405162461bcd60e51b815260040161030c90610f08565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061033c82610403565b9050806001600160a01b0316836001600160a01b031614156103705760405162461bcd60e51b815260040161030c90610f56565b336001600160a01b038216148061038c575061038c81336105fb565b6103a85760405162461bcd60e51b815260040161030c90610fc0565b6103b28383610629565b505050565b6103c13382610697565b6103dd5760405162461bcd60e51b815260040161030c9061101e565b6103b2838383610729565b6103b283838360405180602001604052806000815250610523565b6000818152600260205260408120546001600160a01b0316806102405760405162461bcd60e51b815260040161030c90611074565b60006001600160a01b0382166104605760405162461bcd60e51b815260040161030c906110cb565b506001600160a01b031660009081526003602052604090205490565b60606001805461025590610e8f565b6001600160a01b0382163314156104b45760405162461bcd60e51b815260040161030c906110db565b3360008181526005602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610517908590610ad9565b60405180910390a35050565b61052d3383610697565b6105495760405162461bcd60e51b815260040161030c9061101e565b6105558484848461084b565b50505050565b6000818152600260205260409020546060906001600160a01b03166105925760405162461bcd60e51b815260040161030c90611162565b60006105a960408051602081019091526000815290565b905060008151116105c957604051806020016040528060008152506105f4565b806105d38461087e565b6040516020016105e4929190611194565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061065e82610403565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166106cb5760405162461bcd60e51b815260040161030c906111f5565b60006106d683610403565b9050806001600160a01b0316846001600160a01b031614806107115750836001600160a01b0316610706846102d8565b6001600160a01b0316145b80610721575061072181856105fb565b949350505050565b826001600160a01b031661073c82610403565b6001600160a01b0316146107625760405162461bcd60e51b815260040161030c9061124b565b6001600160a01b0382166107885760405162461bcd60e51b815260040161030c9061129c565b610793600082610629565b6001600160a01b03831660009081526003602052604081208054600192906107bc9084906112c2565b90915550506001600160a01b03821660009081526003602052604081208054600192906107ea9084906112d9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610856848484610729565b6108628484848461097c565b6105555760405162461bcd60e51b815260040161030c90611340565b6060816108a25750506040805180820190915260018152600360fc1b602082015290565b8160005b81156108cc57806108b681611350565b91506108c59050600a83611381565b91506108a6565b60008167ffffffffffffffff8111156108e7576108e7610ccc565b6040519080825280601f01601f191660200182016040528015610911576020820181803683370190505b5090505b8415610721576109266001836112c2565b9150610933600a86611395565b61093e9060306112d9565b60f81b818381518110610953576109536113a9565b60200101906001600160f81b031916908160001a905350610975600a86611381565b9450610915565b60006001600160a01b0384163b15610a7e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906109c09033908990889088906004016113bf565b602060405180830381600087803b1580156109da57600080fd5b505af1925050508015610a0a575060408051601f3d908101601f19168201909252610a079181019061140e565b60015b610a64573d808015610a38576040519150601f19603f3d011682016040523d82523d6000602084013e610a3d565b606091505b508051610a5c5760405162461bcd60e51b815260040161030c90611340565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610721565b506001949350505050565b6001600160e01b031981165b8114610aa057600080fd5b50565b803561024081610a89565b600060208284031215610ac357610ac3600080fd5b60006107218484610aa3565b8015155b82525050565b602081016102408284610acf565b60005b83811015610b02578181015183820152602001610aea565b838111156105555750506000910152565b6000610b1d825190565b808452602084019350610b34818560208601610ae7565b601f01601f19169290920192915050565b602080825281016105f48184610b13565b80610a95565b803561024081610b56565b600060208284031215610b7c57610b7c600080fd5b60006107218484610b5c565b60006001600160a01b038216610240565b610ad381610b88565b602081016102408284610b99565b610a9581610b88565b803561024081610bb0565b60008060408385031215610bda57610bda600080fd5b6000610be68585610bb9565b9250506020610bf785828601610b5c565b9150509250929050565b600080600060608486031215610c1957610c19600080fd5b6000610c258686610bb9565b9350506020610c3686828701610bb9565b9250506040610c4786828701610b5c565b9150509250925092565b600060208284031215610c6657610c66600080fd5b60006107218484610bb9565b80610ad3565b602081016102408284610c72565b801515610a95565b803561024081610c86565b60008060408385031215610caf57610caf600080fd5b6000610cbb8585610bb9565b9250506020610bf785828601610c8e565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610d0857610d08610ccc565b6040525050565b6000610d1a60405190565b9050610d268282610ce2565b919050565b600067ffffffffffffffff821115610d4557610d45610ccc565b601f19601f83011660200192915050565b82818337506000910152565b6000610d75610d7084610d2b565b610d0f565b905082815260208101848484011115610d9057610d90600080fd5b610d9b848285610d56565b509392505050565b600082601f830112610db757610db7600080fd5b8135610721848260208601610d62565b60008060008060808587031215610de057610de0600080fd5b6000610dec8787610bb9565b9450506020610dfd87828801610bb9565b9350506040610e0e87828801610b5c565b925050606085013567ffffffffffffffff811115610e2e57610e2e600080fd5b610e3a87828801610da3565b91505092959194509250565b60008060408385031215610e5c57610e5c600080fd5b6000610e688585610bb9565b9250506020610bf785828601610bb9565b634e487b7160e01b600052602260045260246000fd5b600281046001821680610ea357607f821691505b60208210811415610eb657610eb6610e79565b50919050565b602c81526000602082017f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015291505b5060400190565b6020808252810161024081610ebc565b602181526000602082017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b60208201529150610f01565b6020808252810161024081610f18565b603881526000602082017f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060208201529150610f01565b6020808252810161024081610f66565b603181526000602082017f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b60208201529150610f01565b6020808252810161024081610fd0565b602981526000602082017f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526832b73a103a37b5b2b760b91b60208201529150610f01565b602080825281016102408161102e565b602a81526000602082017f4552433732313a2062616c616e636520717565727920666f7220746865207a65815269726f206164647265737360b01b60208201529150610f01565b6020808252810161024081611084565b6020808252810161024081601981527f4552433732313a20617070726f766520746f2063616c6c657200000000000000602082015260400190565b602f81526000602082017f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526e3732bc34b9ba32b73a103a37b5b2b760891b60208201529150610f01565b6020808252810161024081611116565b600061117c825190565b61118a818560208601610ae7565b9290920192915050565b60006111a08285611172565b91506107218284611172565b602c81526000602082017f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b60208201529150610f01565b60208082528101610240816111ac565b602981526000602082017f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b60208201529150610f01565b6020808252810161024081611205565b602481526000602082017f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b60208201529150610f01565b602080825281016102408161125b565b634e487b7160e01b600052601160045260246000fd5b6000828210156112d4576112d46112ac565b500390565b600082198211156112ec576112ec6112ac565b500190565b603281526000602082017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60208201529150610f01565b60208082528101610240816112f1565b6000600019821415611364576113646112ac565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826113905761139061136b565b500490565b6000826113a4576113a461136b565b500690565b634e487b7160e01b600052603260045260246000fd5b608081016113cd8287610b99565b6113da6020830186610b99565b6113e76040830185610c72565b81810360608301526113f98184610b13565b9695505050505050565b805161024081610a89565b60006020828403121561142357611423600080fd5b6000610721848461140356fea164736f6c6343000809000a";

export class SimpleERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleERC721> {
    return super.deploy(overrides || {}) as Promise<SimpleERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleERC721 {
    return super.attach(address) as SimpleERC721;
  }
  connect(signer: Signer): SimpleERC721__factory {
    return super.connect(signer) as SimpleERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC721Interface {
    return new utils.Interface(_abi) as SimpleERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC721 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC721;
  }
}
