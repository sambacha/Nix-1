/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Owned, OwnedInterface } from "../Owned";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610587806100326000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063b5c5f6721461006f578063f2fde38b14610084575b600080fd5b600054610059906001600160a01b031681565b60405161006691906103e4565b60405180910390f35b61008261007d366004610425565b610097565b005b610082610092366004610475565b61033c565b6000546001600160a01b031633146100c2576040516330cd747160e01b815260040160405180910390fd5b6001600160a01b03831661011857816100d9574791505b600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610112573d6000803e3d6000fd5b506102f4565b6040516301ffc9a760e01b81526000906001600160a01b038516906301ffc9a79061014e906380ac58cd60e01b906004016104ae565b602060405180830381865afa925050508015610187575060408051601f3d908101601f19168201909252610184918101906104cf565b60015b61019057610193565b90505b801561020457600054604051632142170760e11b81526001600160a01b03808716926342842e0e926101cd923092169087906004016104f6565b600060405180830381600087803b1580156101e757600080fd5b505af11580156101fb573d6000803e3d6000fd5b505050506102f2565b82610279576040516370a0823160e01b81526001600160a01b038516906370a08231906102359030906004016103e4565b602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610529565b92505b60005460405163a9059cbb60e01b81526001600160a01b038681169263a9059cbb926102ad9290911690879060040161054a565b6020604051808303816000875af11580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f091906104cf565b505b505b826001600160a01b03167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6838360405161032f92919061056c565b60405180910390a2505050565b6000546001600160a01b03163314610367576040516330cd747160e01b815260040160405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0382165b92915050565b6103de816103c2565b82525050565b602081016103cf82846103d5565b6103fb816103c2565b811461040657600080fd5b50565b80356103cf816103f2565b806103fb565b80356103cf81610414565b60008060006060848603121561043d5761043d600080fd5b60006104498686610409565b935050602061045a8682870161041a565b925050604061046b8682870161041a565b9150509250925092565b60006020828403121561048a5761048a600080fd5b60006104968484610409565b949350505050565b6001600160e01b031981166103de565b602081016103cf828461049e565b8015156103fb565b80516103cf816104bc565b6000602082840312156104e4576104e4600080fd5b600061049684846104c4565b806103de565b6060810161050482866103d5565b61051160208301856103d5565b61049660408301846104f0565b80516103cf81610414565b60006020828403121561053e5761053e600080fd5b6000610496848461051e565b6040810161055882856103d5565b61056560208301846104f0565b9392505050565b6040810161055882856104f056fea164736f6c634300080b000a";

type OwnedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Owned__factory extends ContractFactory {
  constructor(...args: OwnedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Owned> {
    return super.deploy(overrides || {}) as Promise<Owned>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Owned {
    return super.attach(address) as Owned;
  }
  connect(signer: Signer): Owned__factory {
    return super.connect(signer) as Owned__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedInterface {
    return new utils.Interface(_abi) as OwnedInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Owned {
    return new Contract(address, _abi, signerOrProvider) as Owned;
  }
}
