/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NixHelper, NixHelperInterface } from "../NixHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Nix",
        name: "_nix",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "orderIndices",
        type: "uint256[]",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        internalType: "address[]",
        name: "makers",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "takers",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "tokenIds",
        type: "uint256[][]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
      {
        internalType: "uint256[7][]",
        name: "data",
        type: "uint256[7][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokensIndices",
        type: "uint256[]",
      },
    ],
    name: "getTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ordersLengthList",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "executedList",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "volumeTokenList",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "volumeWethList",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tradeIndexes",
        type: "uint256[]",
      },
    ],
    name: "getTrades",
    outputs: [
      {
        internalType: "address[]",
        name: "takers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "royaltyFactors",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "blockNumbers",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "orderIndex",
            type: "uint64",
          },
        ],
        internalType: "struct Nix.ExecutedOrder[][]",
        name: "ordersList",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nix",
    outputs: [
      {
        internalType: "contract Nix",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "enum Nix.BuyOrSell",
            name: "buyOrSell",
            type: "uint8",
          },
          {
            internalType: "enum Nix.AnyOrAll",
            name: "anyOrAll",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenIdsKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "expiry",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "tradeCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "tradeMax",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "royaltyFactor",
            type: "uint64",
          },
        ],
        internalType: "struct Nix.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "orderStatus",
    outputs: [
      {
        internalType: "enum NixHelper.OrderStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20Partial",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type NixHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NixHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NixHelper__factory extends ContractFactory {
  constructor(...args: NixHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _nix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NixHelper> {
    return super.deploy(_nix, overrides || {}) as Promise<NixHelper>;
  }
  getDeployTransaction(
    _nix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nix, overrides || {});
  }
  attach(address: string): NixHelper {
    return super.attach(address) as NixHelper;
  }
  connect(signer: Signer): NixHelper__factory {
    return super.connect(signer) as NixHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NixHelperInterface {
    return new utils.Interface(_abi) as NixHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NixHelper {
    return new Contract(address, _abi, signerOrProvider) as NixHelper;
  }
}
