/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC20, TestERC20Interface } from "../TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "__decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "fixedSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200118f3803806200118f8339818101604052810190620000379190620002a1565b83600090805190602001906200004f92919062000145565b5082600190805190602001906200006892919062000145565b5081600260006101000a81548160ff021916908360ff16021790555080600381905550600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405162000133919062000362565b60405180910390a3505050506200054e565b82805462000153906200042b565b90600052602060002090601f016020900481019282620001775760008555620001c3565b82601f106200019257805160ff1916838001178555620001c3565b82800160010185558215620001c3579182015b82811115620001c2578251825591602001919060010190620001a5565b5b509050620001d29190620001d6565b5090565b5b80821115620001f1576000816000905550600101620001d7565b5090565b60006200020c6200020684620003a8565b6200037f565b9050828152602081018484840111156200022b576200022a620004fa565b5b62000238848285620003f5565b509392505050565b600082601f830112620002585762000257620004f5565b5b81516200026a848260208601620001f5565b91505092915050565b60008151905062000284816200051a565b92915050565b6000815190506200029b8162000534565b92915050565b60008060008060808587031215620002be57620002bd62000504565b5b600085015167ffffffffffffffff811115620002df57620002de620004ff565b5b620002ed8782880162000240565b945050602085015167ffffffffffffffff811115620003115762000310620004ff565b5b6200031f8782880162000240565b935050604062000332878288016200028a565b9250506060620003458782880162000273565b91505092959194509250565b6200035c81620003de565b82525050565b600060208201905062000379600083018462000351565b92915050565b60006200038b6200039e565b905062000399828262000461565b919050565b6000604051905090565b600067ffffffffffffffff821115620003c657620003c5620004c6565b5b620003d18262000509565b9050602081019050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101562000415578082015181840152602081019050620003f8565b8381111562000425576000848401525b50505050565b600060028204905060018216806200044457607f821691505b602082108114156200045b576200045a62000497565b5b50919050565b6200046c8262000509565b810181811067ffffffffffffffff821117156200048e576200048d620004c6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200052581620003de565b81146200053157600080fd5b50565b6200053f81620003e8565b81146200054b57600080fd5b50565b610c31806200055e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906109ca565b60405180910390f35b6100d060048036038101906100cb9190610909565b610292565b6040516100dd91906109af565b60405180910390f35b6100ee610384565b6040516100fb91906109ec565b60405180910390f35b61011e600480360381019061011991906108b6565b6103d8565b60405161012b91906109af565b60405180910390f35b61013c610589565b6040516101499190610a07565b60405180910390f35b61016c60048036038101906101679190610849565b6105a0565b60405161017991906109ec565b60405180910390f35b61018a6105e9565b60405161019791906109ca565b60405180910390f35b6101ba60048036038101906101b59190610909565b61067b565b6040516101c791906109af565b60405180910390f35b6101ea60048036038101906101e59190610876565b610798565b6040516101f791906109ec565b60405180910390f35b60606001805461020f90610b50565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610b50565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161037291906109ec565b60405180910390a36001905092915050565b6000600460008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003546103d39190610a94565b905090565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104299190610a94565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104bc9190610a94565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105129190610a3e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161057691906109ec565b60405180910390a3600190509392505050565b6000600260009054906101000a900460ff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600080546105f890610b50565b80601f016020809104026020016040519081016040528092919081815260200182805461062490610b50565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106cc9190610a94565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107229190610a3e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078691906109ec565b60405180910390a36001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008135905061082e81610bf6565b92915050565b60008135905061084381610c0d565b92915050565b60006020828403121561085f5761085e610be0565b5b600061086d8482850161081f565b91505092915050565b6000806040838503121561088d5761088c610be0565b5b600061089b8582860161081f565b92505060206108ac8582860161081f565b9150509250929050565b6000806000606084860312156108cf576108ce610be0565b5b60006108dd8682870161081f565b93505060206108ee8682870161081f565b92505060406108ff86828701610834565b9150509250925092565b600080604083850312156109205761091f610be0565b5b600061092e8582860161081f565b925050602061093f85828601610834565b9150509250929050565b61095281610ada565b82525050565b600061096382610a22565b61096d8185610a2d565b935061097d818560208601610b1d565b61098681610be5565b840191505092915050565b61099a81610b06565b82525050565b6109a981610b10565b82525050565b60006020820190506109c46000830184610949565b92915050565b600060208201905081810360008301526109e48184610958565b905092915050565b6000602082019050610a016000830184610991565b92915050565b6000602082019050610a1c60008301846109a0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610a4982610b06565b9150610a5483610b06565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8957610a88610b82565b5b828201905092915050565b6000610a9f82610b06565b9150610aaa83610b06565b925082821015610abd57610abc610b82565b5b828203905092915050565b6000610ad382610ae6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610b3b578082015181840152602081019050610b20565b83811115610b4a576000848401525b50505050565b60006002820490506001821680610b6857607f821691505b60208210811415610b7c57610b7b610bb1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610bff81610ac8565b8114610c0a57600080fd5b50565b610c1681610b06565b8114610c2157600080fd5b5056fea164736f6c6343000807000a";

export class TestERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    __symbol: string,
    __name: string,
    __decimals: BigNumberish,
    fixedSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20> {
    return super.deploy(
      __symbol,
      __name,
      __decimals,
      fixedSupply,
      overrides || {}
    ) as Promise<TestERC20>;
  }
  getDeployTransaction(
    __symbol: string,
    __name: string,
    __decimals: BigNumberish,
    fixedSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __symbol,
      __name,
      __decimals,
      fixedSupply,
      overrides || {}
    );
  }
  attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}
